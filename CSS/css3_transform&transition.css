@charset "utf-8";

* {
    margin: 0;
    padding: 0;
}

.trans {
    width: 1200px;
}

.trans > li {
    width: 200px;
    height: 200px;
    background-color: #ddd;
    list-style: none;
    float: left;
    margin: 20px;
}

h3 {
    height: 50px;
    text-align: center;
    line-height: 50px;
}

.note {
    margin: 10px 10px 10px 30px;
    font-size: 12px;
    line-height: 1.5
}

.translate:hover {
    transform: translate(100px, 100px);
    /*    transition-property: all;*/
    /*1. 실행 속성*/
    /*    transition-duration: 0.5s;*/
    /*2.실행시간*/
    /*    transition-timing-function: ease-in-out;*/
    /*3.변화 속도 : 시작과 끝을 천천히*/
    /*    transition-delay: 0.5s;*/
    /*4. 실행 지연시간*/
    transition: all 0.5s ease-in-out;
    /*보통 한줄 줄 속성 입력으로 표시한다. : 속성 시간 형식 순으로 작성 delay는 주로 별도 표기한다.*/
    /*transition을 가상클래스에만 적용해놓으면 실행할 때만 적용, 복구할 때는 적용 불가*/
}

.rotate:hover {
    transform: rotate(-30deg);
}

.scale:hover {
    transform: scale(1, 2)
}

.skew:hover {
    transform: skew(-30deg)
}